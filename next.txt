
reset-password#error=access_denied&error_code=otp_expired&error_description=Email+link+is+invalid+or+has+expired:1 Unchecked runtime.lastError: The message port closed before a response was received.
chunk-GKJBSOWT.js?v=a5d9b576:21551 Download the React DevTools for a better development experience: https://reactjs.org/link/react-devtools
@stripe_stripe-js.js?v=a47eca6d:115 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'match')
    at initStripe2 (@stripe_stripe-js.js?v=a47eca6d:115:22)
    at @stripe_stripe-js.js?v=a47eca6d:151:12
js.stripe.com/v3/m-outer-3437aaddcdf6922d623e172c2d6f9278.html#url=http%3A%2F%2Flocalhost%3A5174%2Fauth%2Freset-password%23error%3Daccess_denied%26error_code%3Dotp_expired%26error_description%3DEmail%2Blink%2Bis%2Binvalid%2Bor%2Bhas%2Bexpired&title=Vite%20%2B%20React%20%2B%20TS&referrer=&muid=24f7588d-740c-417e-b5a7-d5b6a377d21bad52c8&sid=6587afa3-11af-4b4b-9a70-63df9b4abdf4cb4422&version=6&preview=false&__shared_params__[version]=basil:1 Unchecked runtime.lastError: The message port closed before a response was received.
m.stripe.network/inner.html#url=http%3A%2F%2Flocalhost%3A5174%2Fauth%2Freset-password%23error%3Daccess_denied%26error_code%3Dotp_expired%26error_description%3DEmail%2Blink%2Bis%2Binvalid%2Bor%2Bhas%2Bexpired&title=Vite%20%2B%20React%20%2B%20TS&referrer=&muid=24f7588d-740c-417e-b5a7-d5b6a377d21bad52c8&sid=6587afa3-11af-4b4b-9a70-63df9b4abdf4cb4422&version=6&preview=false&__shared_params__[version]=basil:1 Unchecked runtime.lastError: The message port closed before a response was received.

📋 Complete Testing Guide

  1. Basic Authentication Flow Test

  Visit: http://localhost:5174

  Test Steps:
  1. Sign Up Test:
    - Go to signup page
    - Create account with valid email
    - Check email for verification link
    - Click verification link
  2. Login Test:
    - Use credentials to log in
    - Verify redirect to onboarding (since onboarding_completed = false)

  2. Onboarding Wizard Testing

  Once logged in, you'll be redirected to /onboarding. Test each step:

  Step 1: Payment Setup

  🔧 Setup Required: Add Stripe test keys to .env
  # Get test keys from: https://dashboard.stripe.com/test/apikeys
  VITE_STRIPE_PUBLISHABLE_KEY=pk_test_...

  Test Cases:
  - ✅ Valid test card: 4242424242424242
  - ❌ Declined card: 4000000000000002
  - ⚠️ 3D Secure card: 4000000000003220
  - Test without Stripe keys (should show config error)

  Step 2: Kompromat Upload

  Test Cases:
  - Drag and drop image files (JPG, PNG, GIF)
  - Upload video files (MP4, MOV, AVI)
  - Test file size limit (>50MB should fail)
  - Test invalid file types (PDF, TXT should fail)
  - Test severity selection (minor/major)
  - Test description requirement
  - Test file removal before upload
  - Test skip functionality

  Step 3: Contact Management

  Test Cases:
  - Add contact with valid email
  - Test email validation with invalid formats
  - Select different roles (witness, consequence_target)
  - Test duplicate email prevention
  - Add multiple contacts
  - Test contact removal
  - Test skip functionality

  Step 4: Social Media Connection

  🔧 Setup Required: Twitter OAuth (optional)
  VITE_TWITTER_CLIENT_ID=your_client_id

  Test Cases:
  - Test Twitter connection (if configured)
  - Test skip functionality
  - Complete onboarding

  3. Database Verification

  Check your Supabase dashboard to verify:
  - User profile updated with onboarding_completed = true
  - Stripe customer ID saved
  - Kompromat files uploaded to storage
  - Contacts saved with correct roles
  - Social media tokens stored (if connected)

  4. Error Handling Tests

  Test Network Issues:
  - Disconnect internet during onboarding steps
  - Check retry functionality
  - Verify error messages

  Test Validation:
  - Submit empty forms
  - Use invalid data formats
  - Test browser back/refresh during onboarding

  5. Mobile/Responsive Testing

  Test on different screen sizes:
  - Desktop (>1024px)
  - Tablet (768-1024px)
  - Mobile (<768px)

  🎮 Quick Test Commands

  For automated testing, I can create a simple test helper:

● Write(TESTING.md)
  ⎿  Wrote 1 lines to TESTING.md
     # Testing Guide for Threativator Onboarding
     ## 🚀 Quick Start
     1. **Start the dev server:**
        ```bash
        npm run dev
        ```
     2. **Visit:** `http://localhost:5174`      

● 🎯 Immediate Testing Steps

  Right now you can test:

  1. Visit the app: http://localhost:5174
  2. Test authentication without external dependencies:
    - Sign up with a test email
    - Test the login flow
    - Verify onboarding wizard loads
  3. Test UI components:
    - Onboarding stepper navigation
    - Form validations
    - Responsive design
  4. Test with limited functionality:
    - File upload validation (without actual upload)
    - Contact form validation
    - Social media skip functionality

  🔧 For Full Testing (Optional Setup)

  To test Stripe integration:
  1. Create a free Stripe account
  2. Get test keys from https://dashboard.stripe.com/test/apikeys
  3. Add to .env and restart server

  To test Twitter integration:
  1. Create Twitter Developer account
  2. Create OAuth app
  3. Add client ID to .env

  🎮 Test Right Now

  The most important test is that the onboarding flow works end-to-end with proper navigation and state management. Try creating an account and going through     
  the wizard to see the UI and flow in action!